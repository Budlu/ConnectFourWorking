{"version":3,"sources":["game.js","menu.js","analysis.js","evalbar.js","index.js"],"names":["Game","props","state","rows","columns","k","column","i","this","board","length","push","index","total_height","getColumn","highlighted","redFirst","best","analysis","lastMove","className","onClick","debugClick","active","playerMove","move","getMoveHeight","updateBoard","elements","renderColumn","React","Component","Column","tile_height","tile","classes","Tile","class","join","Arrow","visible","renderTile","src","process","alt","style","borderTop","borderLeft","Menu","playerVersusPlayer","bind","playerVersusComputer","backPVPPVC","whichPlayer","playerFirstMenu","computerFirstMenu","whichColor","redFirstMenu","yellowFirstMenu","startGame","prompt","buttonOneText","buttonOneFunction","buttonTwoText","buttonTwoFunction","backFunction","gameStarted","started","restartGame","playClick","startAnalysis","backFunc","setState","pvpMode","playerFirst","clickElement","sound","document","createElement","setAttribute","display","body","appendChild","play","stop","pause","load","catch","error","console","warn","Analysis","history","map","step","jump","EvalBar","height","undefined","p1Height","boxClass","connected","POST_IP","Main","handleData","moveFromColumn","computerMove","updateHistory","updateGame","randomMove","keyDown","toggleDarkMode","onkeydown","darkMode","cname","name","ca","decodeURIComponent","cookie","split","c","charAt","substring","indexOf","getCookie","sheet","gameActive","generateBoard","emptyHighlight","highlightCopy","maximizingPlayer","pvp","gameOver","playerCanMove","status","stylePath","mode","chip","newBoard","JSON","parse","stringify","newHistory","gameState","width","start","clamp","end","every","value","arr","minLeftDiff","min","minRightDiff","n","checkGameOver","playDrop","new_highlighted","highlight","winner","color","redMove","redMessage","yellowMessage","options","method","headers","fetch","then","response","json","data","updatedHistory","percent","validMoves","Math","floor","random","e","event","window","key","preventDefault","cvalue","exdays","d","Date","setTime","getTime","expires","toUTCString","setCookie","rel","type","href","target","click","getElementsByClassName","preload","controls","id","row","val","max","x1","x2","drop","setTimeout","tiles","addEventListener","ReactDom","render","getElementById"],"mappings":"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","file":"js/main.2d14abac.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport class Game extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.state = {\r\n            rows: props.rows,\r\n            columns: props.columns\r\n        };\r\n    }\r\n\r\n    getColumn(k)\r\n    {\r\n        let column = [];\r\n\r\n        for (let i = 0; i < this.props.board.length; i++)\r\n        {\r\n            column.push(this.props.board[i][k]);\r\n        }\r\n\r\n        return column;\r\n    }\r\n\r\n    renderColumn(i)\r\n    {\r\n        let column = <Column index={i} total_height={this.props.rows} column={this.getColumn(i)} highlighted={this.props.highlighted[i]} redFirst={this.props.redFirst} best={this.props.best} analysis={this.props.analysis} lastMove={this.props.lastMove} />;\r\n        return <div key={i} className=\"column\"><button onClick={() => this.debugClick(i)}>{column}</button></div>;\r\n    }\r\n\r\n    getMoveHeight(k)\r\n    {\r\n        let i = this.props.board.length - 1;\r\n\r\n        while (i >= 0)\r\n        {\r\n            if (!this.props.board[i][k])\r\n                return i;\r\n\r\n            i -= 1;\r\n        }\r\n\r\n        return i;\r\n    }\r\n\r\n    debugClick(i)\r\n    {\r\n        if (!this.props.active)\r\n            return;\r\n\r\n        if (!this.props.playerMove)\r\n            return;\r\n        \r\n        let move = this.getMoveHeight(i);\r\n        if (move === -1)\r\n            return;\r\n        \r\n        this.props.updateBoard(move, i);\r\n    }\r\n\r\n    render()\r\n    {\r\n        let elements = [];\r\n        for (let i = 0; i < this.state.columns; i++)\r\n        {\r\n            elements.push(this.renderColumn(i));\r\n        }\r\n\r\n        return <div className=\"game\">{elements}</div>\r\n    }\r\n}\r\n\r\nclass Column extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            index: props.index,\r\n            total_height: props.total_height,\r\n            tile_height: props.tile_height\r\n        }\r\n    }\r\n\r\n    renderTile(i)\r\n    {\r\n        let tile = this.props.column[i];\r\n        let classes = [\"tile\"]\r\n\r\n        if (tile === 1)\r\n        {\r\n            if (this.props.redFirst)\r\n                classes.push(\"red\")\r\n            else\r\n                classes.push(\"yellow\")\r\n        }\r\n        else if (tile === -1)\r\n        {\r\n            if (this.props.redFirst)\r\n                classes.push(\"yellow\")\r\n            else\r\n                classes.push(\"red\")\r\n        }\r\n\r\n        return <Tile key={i} i={i} column={this.props.index} class={classes.join(' ')} highlighted={this.props.highlighted[i]} />;\r\n    }\r\n\r\n    render()\r\n    {\r\n        let elements = [];\r\n\r\n        if (this.props.analysis && this.props.best === this.props.index && !this.props.lastMove)\r\n            elements.push(<Arrow visible={true} key={this.props.total_height} />);\r\n        else\r\n            elements.push(<Arrow visible={false} key={this.props.total_height} />);\r\n\r\n        for (let i = 0; i < this.props.total_height; i++)\r\n        {\r\n            elements.push(this.renderTile(i));\r\n        }\r\n\r\n        return elements;\r\n    }\r\n}\r\n\r\nfunction Arrow(props)\r\n{\r\n    let classes = [\"arrow\"];\r\n    if (!props.visible)\r\n        classes.push(\"invisible\");\r\n\r\n    return <img src={process.env.PUBLIC_URL + \"/Arrow.png\"} className={classes.join(' ')} alt=\"\" />\r\n}\r\n\r\nfunction Tile(props)\r\n{\r\n    let classes = [props.class];\r\n    if (props.highlighted)\r\n        classes.push(\"highlighted\");\r\n\r\n    return <li key={props.i} style={{borderTop: ((props.i === 0) ? \"auto\" : \"none\"), borderLeft: ((props.column === 0) ? \"auto\" : \"none\")}} className={classes.join(' ')}></li>\r\n}\r\n","import React from \"react\";\r\n\r\nexport class Menu extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.playerVersusPlayer = this.playerVersusPlayer.bind(this);\r\n        this.playerVersusComputer = this.playerVersusComputer.bind(this);\r\n        this.backPVPPVC = this.backPVPPVC.bind(this);\r\n\r\n        this.whichPlayer = this.whichPlayer.bind(this);\r\n        this.playerFirstMenu = this.playerFirstMenu.bind(this);\r\n        this.computerFirstMenu = this.computerFirstMenu.bind(this);\r\n\r\n        this.whichColor = this.whichColor.bind(this);\r\n        this.redFirstMenu = this.redFirstMenu.bind(this);\r\n        this.yellowFirstMenu = this.yellowFirstMenu.bind(this);\r\n\r\n        this.startGame = this.startGame.bind(this);\r\n\r\n        this.state = {\r\n            prompt: \"Select a mode: \",\r\n            buttonOneText: \"Player v. Player\",\r\n            buttonOneFunction: this.playerVersusPlayer,\r\n            buttonTwoText: \"Player v. Computer\",\r\n            buttonTwoFunction: this.playerVersusComputer,\r\n            backFunction: function(){},\r\n            gameStarted: false\r\n        }\r\n    }\r\n\r\n    render()\r\n    {\r\n        if (!this.state.gameStarted)\r\n        {\r\n            return (\r\n                <div className=\"menu\">\r\n                    <div className=\"prompt\">\r\n                        {this.state.prompt}<br/>\r\n                    </div>\r\n                    <button onClick={() => {this.state.buttonOneFunction(); playClick();} }>{this.state.buttonOneText}</button><br/>\r\n                    <button onClick={() => {this.state.buttonTwoFunction(); playClick();} }>{this.state.buttonTwoText}</button><br/>\r\n                    <button onClick={() => {this.state.backFunction(); playClick();} }>Back</button><br/>\r\n                </div>\r\n            );\r\n        }\r\n        else if (this.props.visible && !this.props.started)\r\n        {\r\n            return (\r\n                <div className=\"menu\">\r\n                    <button onClick={() => {this.restartGame(); playClick();} }>Restart Game</button><br/>\r\n                    <button onClick={() => {this.props.startAnalysis(); playClick();} }>Start Analysis</button>\r\n                </div>\r\n            );\r\n        }\r\n        else\r\n        {\r\n            return (\r\n                <div className=\"menu\">\r\n                    <button onClick={() => {this.restartGame(); playClick();} }>Restart Game</button>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    whichColor(backFunc)\r\n    {\r\n        this.setState({\r\n            prompt: \"Which color goes first: \",\r\n            buttonOneText: \"Red\",\r\n            buttonOneFunction: this.redFirstMenu,\r\n            buttonTwoText: \"Yellow\",\r\n            buttonTwoFunction: this.yellowFirstMenu,\r\n            backFunction: backFunc\r\n        });\r\n    }\r\n    \r\n    whichPlayer()\r\n    {\r\n        this.setState({\r\n            prompt: \"Who goes first: \",\r\n            buttonOneText: \"Player\",\r\n            buttonOneFunction: this.playerFirstMenu,\r\n            buttonTwoText: \"Computer\",\r\n            buttonTwoFunction: this.computerFirstMenu,\r\n            backFunction: this.backPVPPVC\r\n        });\r\n    }\r\n\r\n    backPVPPVC()\r\n    {\r\n        this.setState({\r\n            prompt: \"Select a mode: \",\r\n            buttonOneText: \"Player v. Player\",\r\n            buttonOneFunction: this.playerVersusPlayer,\r\n            buttonTwoText: \"Player v. Computer\",\r\n            buttonTwoFunction: this.playerVersusComputer,\r\n            backFunction: function(){}\r\n        });\r\n    }\r\n\r\n    startGame()\r\n    {\r\n        this.props.startGame();\r\n        this.setState({gameStarted: true});\r\n    }\r\n\r\n    playerVersusPlayer()\r\n    {\r\n        this.props.pvpMode(true);\r\n        this.whichColor(this.backPVPPVC);\r\n    }\r\n\r\n    playerVersusComputer()\r\n    {\r\n        this.props.pvpMode(false);\r\n        this.whichPlayer();\r\n    }\r\n\r\n    playerFirstMenu()\r\n    {\r\n        this.props.playerFirst(true);\r\n        this.whichColor(this.whichPlayer);\r\n    }\r\n\r\n    computerFirstMenu()\r\n    {\r\n        this.props.playerFirst(false);\r\n        this.whichColor(this.whichPlayer);\r\n    }\r\n\r\n    redFirstMenu()\r\n    {\r\n        this.props.redFirst(true);\r\n        this.startGame();\r\n    }\r\n\r\n    yellowFirstMenu()\r\n    {\r\n        this.props.redFirst(false);\r\n        this.startGame();\r\n    }\r\n\r\n    restartGame()\r\n    {\r\n        this.props.restartGame();\r\n        this.backPVPPVC();\r\n        this.setState({gameStarted: false});\r\n    }\r\n}\r\n\r\nlet clickElement = new soundEffect(process.env.PUBLIC_URL + \"/click.mp3\");\r\n\r\nfunction soundEffect(src)\r\n{\r\n    this.sound = document.createElement(\"audio\");\r\n    this.sound.src = src;\r\n    this.sound.setAttribute(\"preload\", \"auto\");\r\n    this.sound.setAttribute(\"controls\", \"none\");\r\n    this.sound.setAttribute(\"id\", \"sound\")\r\n    this.sound.style.display = \"none\";\r\n    document.body.appendChild(this.sound);\r\n    this.play = function() { this.sound.play(); }\r\n    this.stop = function() { this.sound.pause(); }\r\n}\r\n\r\nfunction playClick()\r\n{\r\n    clickElement.sound.load();\r\n    clickElement.sound.play()\r\n    .catch(error => {console.warn(\"Click sound failed\")});\r\n}","import React from \"react\";\r\n\r\nexport class Analysis extends React.Component\r\n{\r\n    render()\r\n    {\r\n        if (this.props.visible)\r\n        {\r\n            let elements = this.props.history.map((board, step) => {\r\n                let classes = [\"analysis-button\"];\r\n\r\n                if (step === this.props.index)\r\n                    classes.push(\"highlighted\");\r\n\r\n                if (step === 0)\r\n                {\r\n                    return (\r\n                        <li key={step}>\r\n                            <button onClick={() => this.props.jump(step)} className={classes.join(' ')} >Start</button>\r\n                        </li>\r\n                    )\r\n                }\r\n                return (\r\n                    <li key={step}>\r\n                        <button onClick={() => this.props.jump(step)} className={classes.join(' ')} >Move {step}</button>\r\n                    </li>\r\n                );\r\n            });\r\n\r\n            return <div className=\"analysis\">{elements}</div>;\r\n        }\r\n        else\r\n            return <div className=\"analysis\"></div>;\r\n    }\r\n\r\n    startAnalysis()\r\n    {\r\n        this.setState({started: true});\r\n    }\r\n}","import React from \"react\";\r\n\r\nexport class EvalBar extends React.Component\r\n{   \r\n    render()\r\n    {\r\n        if (!this.props.analysis)\r\n            return \"\";\r\n\r\n        let height = -1;\r\n        if (this.props.p1Height !== undefined)\r\n        {\r\n            if (this.props.redFirst)\r\n            {\r\n                height = this.props.p1Height;\r\n            }\r\n            else\r\n            {\r\n                height = 100 - this.props.p1Height;\r\n            }\r\n        }\r\n\r\n        let boxClass = \"\";\r\n        if (!this.props.connected && height === -1)\r\n            boxClass = \"blank-box\"\r\n        else\r\n            boxClass = \"eval-box\";\r\n\r\n        return (\r\n                <div className={boxClass}>\r\n                    <div className=\"eval-red\" style={{height: height + '%'}}></div>\r\n                </div>\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { Game } from \"./game.js\";\r\nimport { Menu } from \"./menu.js\";\r\nimport { Analysis } from \"./analysis.js\";\r\nimport { EvalBar } from \"./evalbar.js\";\r\n\r\nconst POST_IP = \"percent\";\r\nconst ANALYSIS_COLUMNS = 3;\r\nconst DROP_TIME = 125;\r\n\r\nclass Main extends React.Component\r\n{\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n\r\n        this.pvpMode = this.pvpMode.bind(this);\r\n        this.playerFirst = this.playerFirst.bind(this);\r\n        this.redFirst = this.redFirst.bind(this);\r\n\r\n        this.startGame = this.startGame.bind(this);\r\n        this.handleData = this.handleData.bind(this);\r\n        this.moveFromColumn = this.moveFromColumn.bind(this);\r\n        this.computerMove = this.computerMove.bind(this);\r\n        this.updateBoard = this.updateBoard.bind(this);\r\n        this.updateHistory = this.updateHistory.bind(this);\r\n        this.updateGame = this.updateGame.bind(this);\r\n        this.restartGame = this.restartGame.bind(this);\r\n        this.randomMove = this.randomMove.bind(this);\r\n        this.jump = this.jump.bind(this);\r\n        this.startAnalysis = this.startAnalysis.bind(this)\r\n        this.keyDown = this.keyDown.bind(this);\r\n        this.toggleDarkMode = this.toggleDarkMode.bind(this);\r\n\r\n        document.onkeydown = this.keyDown;\r\n\r\n        let darkMode = getCookie(\"darkMode\");\r\n        let sheet = \"\";\r\n        if (darkMode === \"true\")\r\n        {\r\n            darkMode = true;\r\n            sheet = \"/dark.css\";\r\n        }\r\n        else\r\n        {\r\n            darkMode = false;\r\n            sheet = \"/style.css\";\r\n        }\r\n\r\n        this.state = {\r\n            rows: 6,\r\n            columns: 7,\r\n            gameActive: false,\r\n            board: generateBoard(6,7),\r\n            highlighted: generateBoard(7, 6),\r\n            emptyHighlight: generateBoard(7, 6),\r\n            highlightCopy: generateBoard(7, 6),\r\n            maximizingPlayer: true,\r\n            pvp: true,\r\n            playerFirst: true,\r\n            redFirst: true,\r\n            gameOver: false,\r\n            playerCanMove: true,\r\n            status: \"Pick your settings\",\r\n            history: [{\"board\": generateBoard(6, 7)}],\r\n            analysis: false,\r\n            index: 0,\r\n            lastMove: false,\r\n            connected: false,\r\n            stylePath: sheet,\r\n            darkMode: darkMode\r\n        }\r\n    }\r\n\r\n    pvpMode(mode)\r\n    {\r\n        this.setState({pvp: mode})\r\n    }\r\n\r\n    playerFirst(mode)\r\n    {\r\n        this.setState({playerFirst: mode});\r\n    }\r\n\r\n    redFirst(mode)\r\n    {\r\n        this.setState({redFirst: mode});\r\n    }\r\n\r\n    startGame()\r\n    {\r\n        this.setState({gameActive: true, playerCanMove: this.state.playerFirst}, this.updateGame);\r\n    }\r\n\r\n    updateBoard(i, k)\r\n    {\r\n        let chip = 0;\r\n        if (this.state.maximizingPlayer)\r\n            chip = 1;\r\n        else\r\n            chip = -1;\r\n\r\n        let newBoard = JSON.parse(JSON.stringify(this.state.board));\r\n        newBoard[i][k] = chip;\r\n\r\n        let newHistory = this.state.history;\r\n        newHistory.push({\"board\": newBoard});\r\n        this.setState({history: newHistory, index: this.state.index + 1});\r\n\r\n        let gameState = checkGameOver(newBoard, i, k);\r\n\r\n        if (gameState === 2)\r\n        {\r\n            this.setState({board: newBoard, maximizingPlayer: !this.state.maximizingPlayer, gameActive: false, gameOver: true, status: \"It's a draw\"});\r\n            playDrop();\r\n\r\n            return;\r\n        }\r\n        else if (gameState !== 0)\r\n        {\r\n            let new_highlighted = generateBoard(this.state.columns, this.state.rows);\r\n\r\n            for (let highlight of gameState)\r\n            {\r\n                new_highlighted[highlight[1]][highlight[0]] = 1;\r\n            }\r\n\r\n            let winner = \"\";\r\n            let color = \"\";\r\n            if (redMove(this.state.maximizingPlayer, this.state.redFirst))\r\n            {\r\n                winner = \"Red\";\r\n                color = \"red\";\r\n            }\r\n            else\r\n            {\r\n                winner = \"Yellow\";\r\n                color = \"yellow\";\r\n            }\r\n\r\n            let highlightCopy = JSON.parse(JSON.stringify(new_highlighted));\r\n            this.setState({board: newBoard, maximizingPlayer: !this.state.maximizingPlayer, gameActive: false, gameOver: true, highlighted: new_highlighted, highlightCopy: highlightCopy, status: <span style={{color: color}}>{winner} wins!</span>});\r\n            playDrop();\r\n\r\n            return;\r\n        }\r\n\r\n        if (!this.state.pvp)\r\n            this.setState({board: newBoard, maximizingPlayer: !this.state.maximizingPlayer, playerCanMove: !this.state.playerCanMove}, this.updateGame);\r\n        else\r\n            this.setState({board: newBoard, maximizingPlayer: !this.state.maximizingPlayer}, this.updateGame);\r\n\r\n        playDrop();\r\n    }\r\n\r\n    updateGame()\r\n    {\r\n        let redMessage = <span style={{color: \"red\"}}>Red's move</span>;\r\n        let yellowMessage = <span style={{color: \"yellow\"}}>Yellow's move</span>;\r\n\r\n        if (redMove(this.state.maximizingPlayer, this.state.redFirst))\r\n        {\r\n            this.setState({status: redMessage});\r\n        }\r\n        else\r\n        {\r\n            this.setState({status: yellowMessage});\r\n        }\r\n\r\n        if (!this.state.pvp && !this.state.playerCanMove)\r\n        {\r\n            this.computerMove();\r\n        }\r\n    }\r\n\r\n    restartGame()\r\n    {\r\n        this.setState({gameActive: false, board: generateBoard(6,7), highlighted: generateBoard(7,6), highlightCopy: generateBoard(7, 6), maximizingPlayer: true, gameOver: false, playerCanMove: true, playerFirst: true, status: \"Pick your settings\", history: [{\"board\": generateBoard(6, 7)}], analysis: false, index: 0, lastMove: false});\r\n    }\r\n\r\n    computerMove()\r\n    {\r\n        let options = {method: 'POST', mode: 'cors', headers: {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'}, body: JSON.stringify(this.state.board)};\r\n\t\r\n        fetch(POST_IP, options)\r\n        .then(response => response.json())\r\n        .then(data => { this.handleData(data) } )\r\n        .catch(error => { this.randomMove(); } );\r\n    }\r\n\r\n    handleData(data)\r\n    {\r\n        if (!this.state.gameActive)\r\n            return;\r\n\r\n        let updatedHistory = this.state.history;\r\n        updatedHistory[updatedHistory.length - 1][\"best\"] = data.best;\r\n        updatedHistory[updatedHistory.length - 1][\"percent\"] = data.percent;\r\n\r\n        this.moveFromColumn(data.best);\r\n        this.setState({history: updatedHistory})\r\n    }\r\n\r\n    randomMove()\r\n    {\r\n        if (!this.state.gameActive)\r\n            return;\r\n\r\n        let validMoves = [];\r\n\r\n        for (let k = 0; k < this.state.board[0].length; k++)\r\n        {\r\n            if (this.state.board[0][k] === 0)\r\n                validMoves.push(k);\r\n        }\r\n\r\n        let index = Math.floor(Math.random() * validMoves.length);\r\n\r\n        this.moveFromColumn(index);\r\n    }\r\n\r\n    moveFromColumn(k)\r\n    {\r\n        let i = this.state.board.length - 1;\r\n\r\n        while (i >= 0)\r\n        {\r\n            if (!this.state.board[i][k])\r\n            {\r\n                this.updateBoard(i, k);\r\n                return;\r\n            }\r\n\r\n            i -= 1;\r\n        }\r\n\r\n        this.updateBoard(i, k);\r\n    }\r\n\r\n    jump(i)\r\n    {\r\n        if (i > this.state.index)\r\n            playDrop();\r\n\r\n        if (i === this.state.history.length - 1)\r\n        {\r\n            this.setState({board: this.state.history[i][\"board\"], highlighted: this.state.highlightCopy, index: i, lastMove: true})\r\n        }\r\n        else\r\n        {\r\n            this.setState({board: this.state.history[i][\"board\"], highlighted: this.state.emptyHighlight, index: i, lastMove: false});\r\n        }\r\n    }\r\n\r\n    updateHistory(data, i)\r\n    {\r\n        if (!this.state.analysis)\r\n            return;\r\n\r\n        let newHistory = this.state.history;\r\n        newHistory[i][\"percent\"] = data[\"percent\"];\r\n        newHistory[i][\"best\"] = data[\"best\"];\r\n\r\n        this.setState({history: newHistory, connected: true});\r\n    }\r\n\r\n    startAnalysis()\r\n    {\r\n        this.setState({analysis: true});\r\n\r\n        for (let i = 0; i < this.state.history.length; i++)\r\n        {\r\n            if (this.state.history[i][\"percent\"] === undefined)\r\n            {\r\n                let options = {method: 'POST', mode: 'cors', headers: {'Content-Type': 'application/json', 'Access-Control-Allow-Origin': '*'}, body: JSON.stringify(this.state.history[i][\"board\"])};\r\n\r\n                fetch(POST_IP, options)\r\n                .then(response => response.json())\r\n                .then(data => { this.updateHistory(data, i); } )\r\n                .catch(error => { this.setState({connected: false}); } );\r\n            }\r\n        }\r\n\r\n        this.jump(0);\r\n    }\r\n\r\n    keyDown(e)\r\n    {\r\n        let event = window.event ? window.event : e;\r\n\r\n        if (event.key === \"ArrowDown\" || event.key === \"ArrowRight\" || event.key === \"s\" || event.key === \"d\")\r\n        {\r\n            if (this.state.analysis && this.state.index < (this.state.history.length - 1))\r\n                this.jump(this.state.index + 1);\r\n\r\n            event.preventDefault();\r\n        }\r\n        else if (event.key === \"ArrowUp\" || event.key === \"ArrowLeft\" || event.key === \"w\" || event.key === \"a\")\r\n        {\r\n            if (this.state.analysis && this.state.index > 0)\r\n                this.jump(this.state.index - 1);\r\n\r\n            event.preventDefault();\r\n        }\r\n    }\r\n\r\n    toggleDarkMode()\r\n    {\r\n        let mode = !this.state.darkMode;\r\n\r\n        if (mode)\r\n            this.setState({darkMode: mode, stylePath: \"/dark.css\"});\r\n        else\r\n            this.setState({darkMode: mode, stylePath: \"/style.css\"});\r\n\r\n        setCookie(\"darkMode\", mode, 365 * 10);\r\n    }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <div className=\"container\">\r\n                <link rel=\"stylesheet\" type=\"text/css\" href={ process.env.PUBLIC_URL + this.state.stylePath } />\r\n                <div className=\"header\">\r\n                    <h1>Connect Four</h1>\r\n                    <div className=\"credits\">\r\n                        Matthew Rubino - <a href=\"https://github.com/Budlu/ConnectFour\" target=\"_blank\" rel=\"noreferrer\">https://github.com/Budlu/ConnectFour</a>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\" >\r\n                    <div className=\"column-1\">\r\n                        <Menu pvpMode={this.pvpMode} playerFirst={this.playerFirst} redFirst={this.redFirst} startGame={this.startGame} restartGame={this.restartGame} visible={this.state.gameOver} started={this.state.analysis} startAnalysis={this.startAnalysis} />\r\n                        <Analysis visible={this.state.analysis} history={this.state.history} jump={this.jump} index={this.state.index} />\r\n                    </div>\r\n                    <div className=\"column-2\">\r\n                        <h2>{this.state.status}</h2>\r\n                        <div className=\"game-link\">\r\n                            <EvalBar redFirst={this.state.redFirst} p1Height={this.state.history[this.state.index][\"percent\"]} analysis={this.state.analysis} connected={this.state.connected} />\r\n                            <Game rows={6} columns={7} board={this.state.board} highlighted={this.state.highlighted} updateBoard={this.updateBoard} active={this.state.gameActive} redFirst={this.state.redFirst} playerMove={this.state.playerCanMove} analysis={this.state.analysis} best={this.state.history[this.state.index][\"best\"]} lastMove={this.state.lastMove} connected={this.state.connected} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"dark-mode\" onClick={() => {this.toggleDarkMode(); playClick();} }>O</button>\r\n                <audio src={process.env.PUBLIC_URL + \"/click.mp3\"} preload=\"auto\" controls=\"none\" id=\"sound\" style={{display: \"none\"}} className=\"click-source\" />\r\n                <audio src={process.env.PUBLIC_URL + \"/drop.mp3\"} preload=\"auto\" controls=\"none\" id=\"sound\" style={{display: \"none\"}} className=\"drop-source\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction generateBoard(rows, columns)\r\n{\r\n    let board = [];\r\n\r\n    for (let i = 0; i < rows; i++)\r\n    {\r\n        let row = [];\r\n        for (let k = 0; k < columns; k++)\r\n        {\r\n            row.push(0);\r\n        }\r\n        board.push(row);\r\n    }\r\n\r\n    return board;\r\n}\r\n\r\nfunction checkGameOver(board, i, k)\r\n{\r\n    let height = board.length;\r\n    let width = board[0].length;\r\n\r\n    // Horizontal Win Check\r\n    let start = clamp(k-3, 0, width - 4);\r\n    let end = clamp(k, 0, width - 4);\r\n\r\n    while (start <= end)\r\n    {\r\n        let tiles = [board[i][start], board[i][start + 1], board[i][start + 2], board[i][start + 3]];\r\n        if (tiles.every((value, i, arr) => value === arr[0]))\r\n            return [[i, start], [i, start + 1], [i, start + 2], [i, start + 3]];\r\n        \r\n        start += 1;\r\n    }\r\n\r\n    // Vertical Win Check\r\n    if (i <= height - 4)\r\n    {\r\n        let tiles = [board[i][k], board[i + 1][k], board[i + 2][k], board[i + 3][k]];\r\n        if (tiles.every((value, i, arr) => value === arr[0]))\r\n            return [[i, k], [i + 1, k], [i + 2, k], [i + 3, k]];\r\n    }\r\n\r\n    // Diagonal Win Check (TL to BR)\r\n    let minLeftDiff = min(i, k);\r\n    start = clamp(minLeftDiff, 0, 3);\r\n\r\n    let minRightDiff = min(height - i - 1, width - k - 1);\r\n    end = clamp(3 - minRightDiff, 0, 3)\r\n\r\n    while (start >= end)\r\n    {\r\n        let tiles = [board[i - start][k - start], board[i - start + 1][k - start + 1], board[i - start + 2][k - start + 2], board[i - start + 3][k - start + 3]];\r\n        if (tiles.every((value, i, arr) => value === arr[0]))\r\n            return [[i - start, k - start], [i - start + 1, k - start + 1], [i - start + 2, k - start + 2], [i - start + 3, k - start + 3]];\r\n\r\n        start -= 1;\r\n    }\r\n\r\n    // Diagonal Win Check (TR to BL)\r\n    minLeftDiff = min(height - i - 1, k)\r\n    minRightDiff = min(i, width - k - 1)\r\n\r\n    start = clamp(minRightDiff, 0, 3)\r\n    end = clamp(3 - minLeftDiff, 0, 3)\r\n\r\n    while (start >= end)\r\n    {\r\n        let tiles = [board[i - start][k + start], board[i - start + 1][k + start - 1], board[i - start + 2][k + start - 2], board[i - start + 3][k + start - 3]];\r\n        if (tiles.every((value, i, arr) => value === arr[0]))\r\n            return [[i - start, k + start], [i - start + 1, k + start - 1], [i - start + 2, k + start - 2], [i - start + 3, k + start - 3]];\r\n\r\n        start -= 1;\r\n    }\r\n\r\n    for (let n = 0; n < width; n++)\r\n    {\r\n        if (!board[0][n])\r\n            return 0;\r\n    }\r\n\r\n    return 2;\r\n}\r\n\r\nfunction clamp(val, min, max)\r\n{\r\n    if (val >= max)\r\n        return max;\r\n    else if (val <= min)\r\n        return min;\r\n    else\r\n        return val;\r\n}\r\n\r\nfunction min(x1, x2)\r\n{\r\n    if (x1 < x2)\r\n        return x1;\r\n    else\r\n        return x2;\r\n}\r\n\r\nfunction redMove(maximizingPlayer, redFirst)\r\n{\r\n    if (redFirst)\r\n    {\r\n        if (maximizingPlayer)\r\n            return true;\r\n        return false;\r\n    }\r\n    else\r\n    {\r\n        if (maximizingPlayer)\r\n            return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nfunction playDrop()\r\n{\r\n    let drop = document.getElementsByClassName(\"drop-source\")[0];\r\n    setTimeout(function() {\r\n        drop.load();\r\n        drop.play()\r\n        .catch(error => {console.warn(error)});\r\n    }, DROP_TIME);\r\n}\r\n\r\nfunction playClick()\r\n{\r\n    let click = document.getElementsByClassName(\"click-source\")[0];\r\n    click.load();\r\n    click.play()\r\n    .catch(error => {console.warn(error)});\r\n}\r\n\r\nfunction setCookie(cname, cvalue, exdays)\r\n{\r\n    var d = new Date();\r\n    d.setTime(d.getTime() + (exdays * 24 * 60 * 60 * 1000));\r\n    var expires = \"expires=\"+d.toUTCString();\r\n    document.cookie = cname + \"=\" + cvalue + \";\" + expires + \";path=/\";\r\n  }\r\n\r\nfunction getCookie(cname)\r\n{\r\n    var name = cname + \"=\";\r\n    var decodedCookie = decodeURIComponent(document.cookie);\r\n    var ca = decodedCookie.split(';');\r\n    for(var i = 0; i <ca.length; i++) {\r\n      var c = ca[i];\r\n      while (c.charAt(0) === ' ') {\r\n        c = c.substring(1);\r\n      }\r\n      if (c.indexOf(name) === 0) {\r\n        return c.substring(name.length, c.length);\r\n      }\r\n    }\r\n    return \"\";\r\n}\r\n\r\nlet tiles = document.getElementsByClassName(\"tile\");\r\nfor (let tile of tiles)\r\n{\r\n    tile.addEventListener(\"animationend\", dropAnimationEnd());\r\n}\r\n\r\nfunction dropAnimationEnd()\r\n{\r\n    playDrop();\r\n}\r\n\r\nReactDom.render(<Main />, document.getElementById(\"root\"));"],"sourceRoot":""}